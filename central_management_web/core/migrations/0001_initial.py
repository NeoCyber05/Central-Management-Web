# Generated by Django 5.2 on 2025-06-02 16:26

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='class_type',
            fields=[
                ('type_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Mã loại lớp')),
                ('describe', models.TextField(verbose_name='Mô tả')),
                ('code', models.CharField(max_length=1, unique=True, verbose_name='Mã code')),
            ],
            options={
                'db_table': 'class_type',
            },
        ),
        migrations.CreateModel(
            name='hoc_vien',
            fields=[
                ('student_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Mã Học Viên')),
                ('full_name', models.CharField(max_length=40, verbose_name='Họ và Tên')),
                ('gender', models.CharField(max_length=1, verbose_name='Giới tính')),
                ('birth_day', models.DateField(verbose_name='Ngày sinh')),
                ('email', models.EmailField(max_length=40, verbose_name='Email')),
                ('sdt', models.CharField(max_length=15, verbose_name='Số điện thoại')),
                ('address', models.CharField(max_length=30, verbose_name='Địa chỉ')),
            ],
            options={
                'verbose_name': 'Học Viên',
                'verbose_name_plural': 'Học Viên',
                'db_table': 'hoc_vien',
                'constraints': [models.CheckConstraint(condition=models.Q(('gender__in', ['M', 'F'])), name='hoc_vien_gender_valid')],
            },
        ),
        migrations.CreateModel(
            name='nhan_vien',
            fields=[
                ('nv_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Mã Nhân Viên')),
                ('full_name', models.CharField(max_length=40, verbose_name='Họ và Tên')),
                ('gender', models.CharField(max_length=1, verbose_name='Giới tính')),
                ('birth_day', models.DateField(verbose_name='Ngày sinh')),
                ('email', models.EmailField(max_length=40, verbose_name='Email')),
                ('sdt', models.CharField(max_length=15, verbose_name='Số điện thoại')),
                ('address', models.CharField(max_length=30, verbose_name='Địa chỉ')),
            ],
            options={
                'verbose_name': 'Nhân Viên',
                'verbose_name_plural': 'Nhân Viên',
                'db_table': 'nhan_vien',
                'constraints': [models.CheckConstraint(condition=models.Q(('gender__in', ['M', 'F'])), name='nhan_vien_gender_valid')],
            },
        ),
        migrations.CreateModel(
            name='clazz',
            fields=[
                ('class_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Mã Lớp học')),
                ('class_name', models.CharField(max_length=40, verbose_name='Tên lớp học')),
                ('room', models.CharField(max_length=15, verbose_name='Phòng học')),
                ('khai_giang', models.DateField(verbose_name='Ngày khai giảng')),
                ('ket_thuc', models.DateField(verbose_name='Ngày kết thúc')),
                ('si_so', models.IntegerField(verbose_name='Sĩ số tối đa')),
                ('price', models.IntegerField(verbose_name='Học phí')),
                ('type', models.ForeignKey(db_column='type_id', on_delete=django.db.models.deletion.PROTECT, to='core.class_type', verbose_name='Loại lớp')),
                ('nhan_vien', models.ForeignKey(db_column='nv_id', on_delete=django.db.models.deletion.PROTECT, to='core.nhan_vien', verbose_name='Nhân viên quản lý')),
            ],
            options={
                'verbose_name': 'Lớp Học',
                'verbose_name_plural': 'Lớp Học',
                'db_table': 'clazz',
            },
        ),
        migrations.CreateModel(
            name='schedule',
            fields=[
                ('id_schedule', models.AutoField(primary_key=True, serialize=False, verbose_name='Mã Lịch học')),
                ('day', models.CharField(max_length=20, verbose_name='Ngày trong tuần/Buổi học')),
                ('start_time', models.TimeField(verbose_name='Thời gian bắt đầu')),
                ('end_time', models.TimeField(verbose_name='Thời gian kết thúc')),
                ('class_obj', models.ForeignKey(db_column='class_id', on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='core.clazz', verbose_name='Lớp học')),
            ],
            options={
                'verbose_name': 'Lịch Học',
                'verbose_name_plural': 'Lịch Học',
                'db_table': 'schedule',
            },
        ),
        migrations.CreateModel(
            name='teacher',
            fields=[
                ('teacher_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Mã Giáo Viên')),
                ('full_name', models.CharField(max_length=40, verbose_name='Họ và Tên')),
                ('gender', models.CharField(max_length=1, verbose_name='Giới tính')),
                ('birth_day', models.DateField(verbose_name='Ngày sinh')),
                ('email', models.EmailField(max_length=40, verbose_name='Email')),
                ('sdt', models.CharField(max_length=15, verbose_name='Số điện thoại')),
                ('address', models.CharField(max_length=30, verbose_name='Địa chỉ')),
                ('trinh_do', models.CharField(default='Cử nhân', max_length=10, verbose_name='Trình độ')),
            ],
            options={
                'verbose_name': 'Giáo Viên',
                'verbose_name_plural': 'Giáo Viên',
                'db_table': 'teacher',
                'constraints': [models.CheckConstraint(condition=models.Q(('gender__in', ['M', 'F'])), name='giao_vien_gender_valid'), models.CheckConstraint(condition=models.Q(('trinh_do__in', ['Cử nhân', 'Thạc Sĩ', 'Tiến Sĩ'])), name='teacher_trinh_do_valid')],
            },
        ),
        migrations.AddField(
            model_name='clazz',
            name='teacher',
            field=models.ForeignKey(db_column='teacher_id', on_delete=django.db.models.deletion.PROTECT, to='core.teacher', verbose_name='Giáo viên'),
        ),
        migrations.CreateModel(
            name='enrollments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateField(verbose_name='Ngày đăng ký')),
                ('minitest1', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Điểm minitest 1')),
                ('minitest2', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Điểm minitest 2')),
                ('minitest3', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Điểm minitest 3')),
                ('minitest4', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Điểm minitest 4')),
                ('midterm', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Điểm giữa kỳ')),
                ('final', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Điểm cuối kỳ')),
                ('class_obj', models.ForeignKey(db_column='class_id', on_delete=django.db.models.deletion.CASCADE, to='core.clazz', verbose_name='Lớp học')),
                ('student', models.ForeignKey(db_column='student_id', on_delete=django.db.models.deletion.CASCADE, to='core.hoc_vien', verbose_name='Học viên')),
            ],
            options={
                'verbose_name': 'Đăng Ký Học',
                'verbose_name_plural': 'Đăng Ký Học',
                'db_table': 'enrollments',
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('minitest1__gte', 0), ('minitest1__lte', 10)), ('minitest1__isnull', True), _connector='OR'), name='minitest1_in_range'), models.CheckConstraint(condition=models.Q(models.Q(('minitest2__gte', 0), ('minitest2__lte', 10)), ('minitest2__isnull', True), _connector='OR'), name='minitest2_in_range'), models.CheckConstraint(condition=models.Q(models.Q(('minitest3__gte', 0), ('minitest3__lte', 10)), ('minitest3__isnull', True), _connector='OR'), name='minitest3_in_range'), models.CheckConstraint(condition=models.Q(models.Q(('minitest4__gte', 0), ('minitest4__lte', 10)), ('minitest4__isnull', True), _connector='OR'), name='minitest4_in_range'), models.CheckConstraint(condition=models.Q(models.Q(('midterm__gte', 0), ('midterm__lte', 10)), ('midterm__isnull', True), _connector='OR'), name='midterm_in_range'), models.CheckConstraint(condition=models.Q(models.Q(('final__gte', 0), ('final__lte', 10)), ('final__isnull', True), _connector='OR'), name='final_in_range')],
                'unique_together': {('student', 'class_obj')},
            },
        ),
        migrations.CreateModel(
            name='attendance',
            fields=[
                ('id_attend', models.AutoField(primary_key=True, serialize=False, verbose_name='Mã Điểm danh')),
                ('attendance_date', models.DateField(verbose_name='Ngày điểm danh')),
                ('status', models.CharField(max_length=15, verbose_name='Trạng thái')),
                ('class_obj', models.ForeignKey(db_column='class_id', on_delete=django.db.models.deletion.CASCADE, to='core.clazz', verbose_name='Lớp học')),
                ('student', models.ForeignKey(db_column='student_id', on_delete=django.db.models.deletion.CASCADE, to='core.hoc_vien', verbose_name='Học viên')),
            ],
            options={
                'verbose_name': 'Điểm Danh',
                'verbose_name_plural': 'Điểm Danh',
                'db_table': 'attendance',
                'constraints': [models.CheckConstraint(condition=models.Q(('status__in', ['Absent', 'Present'])), name='status_valid')],
            },
        ),
        migrations.CreateModel(
            name='feedback',
            fields=[
                ('id_feedback', models.AutoField(primary_key=True, serialize=False, verbose_name='Mã Feedback')),
                ('class_rate', models.FloatField(blank=True, null=True, verbose_name='Đánh giá lớp học')),
                ('teacher_rate', models.FloatField(blank=True, null=True, verbose_name='Đánh giá giáo viên')),
                ('class_obj', models.ForeignKey(db_column='class_id', on_delete=django.db.models.deletion.PROTECT, to='core.clazz', verbose_name='Lớp học')),
                ('student', models.ForeignKey(db_column='student_id', on_delete=django.db.models.deletion.PROTECT, to='core.hoc_vien', verbose_name='Học viên')),
                ('teacher', models.ForeignKey(db_column='teacher_id', on_delete=django.db.models.deletion.PROTECT, to='core.teacher', verbose_name='Giáo viên')),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedback',
                'db_table': 'feedback',
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('class_rate__gte', 0), ('class_rate__lte', 10)), ('class_rate__isnull', True), _connector='OR'), name='class_rate_in_range'), models.CheckConstraint(condition=models.Q(models.Q(('teacher_rate__gte', 0), ('teacher_rate__lte', 10)), ('teacher_rate__isnull', True), _connector='OR'), name='teacher_rate_in_range')],
            },
        ),
    ]
